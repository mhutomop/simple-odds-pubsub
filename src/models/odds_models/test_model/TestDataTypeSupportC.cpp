// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.1.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp:372


#include "TestDataTypeSupportC.h"
#include <tao/CDR.h>
#include <cstring>
// TAO_IDL - Generated from
// /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for TestData::MessageTypeSupport.

TestData::MessageTypeSupport_ptr
TAO::Objref_Traits<TestData::MessageTypeSupport>::duplicate (TestData::MessageTypeSupport_ptr p)
{
  return TestData::MessageTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<TestData::MessageTypeSupport>::release (TestData::MessageTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

TestData::MessageTypeSupport_ptr
TAO::Objref_Traits<TestData::MessageTypeSupport>::nil ()
{
  return TestData::MessageTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<TestData::MessageTypeSupport>::marshal (const TestData::MessageTypeSupport_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



TestData::MessageTypeSupport::MessageTypeSupport ()
{}TestData::MessageTypeSupport_ptr
TestData::MessageTypeSupport::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MessageTypeSupport::_duplicate (
      dynamic_cast<MessageTypeSupport_ptr> (_tao_objref));
}

TestData::MessageTypeSupport_ptr
TestData::MessageTypeSupport::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MessageTypeSupport::_duplicate (
      dynamic_cast<MessageTypeSupport_ptr> (_tao_objref));
}

TestData::MessageTypeSupport_ptr
TestData::MessageTypeSupport::_nil ()
{
  return nullptr;
}

TestData::MessageTypeSupport_ptr
TestData::MessageTypeSupport::_duplicate (MessageTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
TestData::MessageTypeSupport::_tao_release (MessageTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
TestData::MessageTypeSupport::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:DDS/TypeSupport:1.0") == 0 ||
      std::strcmp (value, "IDL:OpenDDS/DCPS/TypeSupport:1.0") == 0 ||
      std::strcmp (value, "IDL:TestData/MessageTypeSupport:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* TestData::MessageTypeSupport::_interface_repository_id () const
{
  return "IDL:TestData/MessageTypeSupport:1.0";
}

::CORBA::Boolean
TestData::MessageTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for TestData::MessageDataWriter.

TestData::MessageDataWriter_ptr
TAO::Objref_Traits<TestData::MessageDataWriter>::duplicate (TestData::MessageDataWriter_ptr p)
{
  return TestData::MessageDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<TestData::MessageDataWriter>::release (TestData::MessageDataWriter_ptr p)
{
  ::CORBA::release (p);
}

TestData::MessageDataWriter_ptr
TAO::Objref_Traits<TestData::MessageDataWriter>::nil ()
{
  return TestData::MessageDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<TestData::MessageDataWriter>::marshal (const TestData::MessageDataWriter_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



TestData::MessageDataWriter::MessageDataWriter ()
{}TestData::MessageDataWriter_ptr
TestData::MessageDataWriter::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MessageDataWriter::_duplicate (
      dynamic_cast<MessageDataWriter_ptr> (_tao_objref));
}

TestData::MessageDataWriter_ptr
TestData::MessageDataWriter::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MessageDataWriter::_duplicate (
      dynamic_cast<MessageDataWriter_ptr> (_tao_objref));
}

TestData::MessageDataWriter_ptr
TestData::MessageDataWriter::_nil ()
{
  return nullptr;
}

TestData::MessageDataWriter_ptr
TestData::MessageDataWriter::_duplicate (MessageDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
TestData::MessageDataWriter::_tao_release (MessageDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
TestData::MessageDataWriter::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:DDS/Entity:1.0") == 0 ||
      std::strcmp (value, "IDL:DDS/DataWriter:1.0") == 0 ||
      std::strcmp (value, "IDL:TestData/MessageDataWriter:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* TestData::MessageDataWriter::_interface_repository_id () const
{
  return "IDL:TestData/MessageDataWriter:1.0";
}

::CORBA::Boolean
TestData::MessageDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for TestData::MessageDataReader.

TestData::MessageDataReader_ptr
TAO::Objref_Traits<TestData::MessageDataReader>::duplicate (TestData::MessageDataReader_ptr p)
{
  return TestData::MessageDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<TestData::MessageDataReader>::release (TestData::MessageDataReader_ptr p)
{
  ::CORBA::release (p);
}

TestData::MessageDataReader_ptr
TAO::Objref_Traits<TestData::MessageDataReader>::nil ()
{
  return TestData::MessageDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<TestData::MessageDataReader>::marshal (const TestData::MessageDataReader_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



TestData::MessageDataReader::MessageDataReader ()
{}TestData::MessageDataReader_ptr
TestData::MessageDataReader::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MessageDataReader::_duplicate (
      dynamic_cast<MessageDataReader_ptr> (_tao_objref));
}

TestData::MessageDataReader_ptr
TestData::MessageDataReader::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MessageDataReader::_duplicate (
      dynamic_cast<MessageDataReader_ptr> (_tao_objref));
}

TestData::MessageDataReader_ptr
TestData::MessageDataReader::_nil ()
{
  return nullptr;
}

TestData::MessageDataReader_ptr
TestData::MessageDataReader::_duplicate (MessageDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
TestData::MessageDataReader::_tao_release (MessageDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
TestData::MessageDataReader::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:DDS/Entity:1.0") == 0 ||
      std::strcmp (value, "IDL:DDS/DataReader:1.0") == 0 ||
      std::strcmp (value, "IDL:OpenDDS/DCPS/DataReaderEx:1.0") == 0 ||
      std::strcmp (value, "IDL:TestData/MessageDataReader:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* TestData::MessageDataReader::_interface_repository_id () const
{
  return "IDL:TestData/MessageDataReader:1.0";
}

::CORBA::Boolean
TestData::MessageDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}


// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.1.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp:372


#include "TestDataTypeSupportC.h"
#include <tao/CDR.h>
#include <cstring>
// TAO_IDL - Generated from
// /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for HelloWorldData::MsgTypeSupport.

HelloWorldData::MsgTypeSupport_ptr
TAO::Objref_Traits<HelloWorldData::MsgTypeSupport>::duplicate (HelloWorldData::MsgTypeSupport_ptr p)
{
  return HelloWorldData::MsgTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<HelloWorldData::MsgTypeSupport>::release (HelloWorldData::MsgTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

HelloWorldData::MsgTypeSupport_ptr
TAO::Objref_Traits<HelloWorldData::MsgTypeSupport>::nil ()
{
  return HelloWorldData::MsgTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<HelloWorldData::MsgTypeSupport>::marshal (const HelloWorldData::MsgTypeSupport_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



HelloWorldData::MsgTypeSupport::MsgTypeSupport ()
{}HelloWorldData::MsgTypeSupport_ptr
HelloWorldData::MsgTypeSupport::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MsgTypeSupport::_duplicate (
      dynamic_cast<MsgTypeSupport_ptr> (_tao_objref));
}

HelloWorldData::MsgTypeSupport_ptr
HelloWorldData::MsgTypeSupport::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MsgTypeSupport::_duplicate (
      dynamic_cast<MsgTypeSupport_ptr> (_tao_objref));
}

HelloWorldData::MsgTypeSupport_ptr
HelloWorldData::MsgTypeSupport::_nil ()
{
  return nullptr;
}

HelloWorldData::MsgTypeSupport_ptr
HelloWorldData::MsgTypeSupport::_duplicate (MsgTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
HelloWorldData::MsgTypeSupport::_tao_release (MsgTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
HelloWorldData::MsgTypeSupport::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:DDS/TypeSupport:1.0") == 0 ||
      std::strcmp (value, "IDL:OpenDDS/DCPS/TypeSupport:1.0") == 0 ||
      std::strcmp (value, "IDL:HelloWorldData/MsgTypeSupport:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* HelloWorldData::MsgTypeSupport::_interface_repository_id () const
{
  return "IDL:HelloWorldData/MsgTypeSupport:1.0";
}

::CORBA::Boolean
HelloWorldData::MsgTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for HelloWorldData::MsgDataWriter.

HelloWorldData::MsgDataWriter_ptr
TAO::Objref_Traits<HelloWorldData::MsgDataWriter>::duplicate (HelloWorldData::MsgDataWriter_ptr p)
{
  return HelloWorldData::MsgDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<HelloWorldData::MsgDataWriter>::release (HelloWorldData::MsgDataWriter_ptr p)
{
  ::CORBA::release (p);
}

HelloWorldData::MsgDataWriter_ptr
TAO::Objref_Traits<HelloWorldData::MsgDataWriter>::nil ()
{
  return HelloWorldData::MsgDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<HelloWorldData::MsgDataWriter>::marshal (const HelloWorldData::MsgDataWriter_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



HelloWorldData::MsgDataWriter::MsgDataWriter ()
{}HelloWorldData::MsgDataWriter_ptr
HelloWorldData::MsgDataWriter::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MsgDataWriter::_duplicate (
      dynamic_cast<MsgDataWriter_ptr> (_tao_objref));
}

HelloWorldData::MsgDataWriter_ptr
HelloWorldData::MsgDataWriter::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MsgDataWriter::_duplicate (
      dynamic_cast<MsgDataWriter_ptr> (_tao_objref));
}

HelloWorldData::MsgDataWriter_ptr
HelloWorldData::MsgDataWriter::_nil ()
{
  return nullptr;
}

HelloWorldData::MsgDataWriter_ptr
HelloWorldData::MsgDataWriter::_duplicate (MsgDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
HelloWorldData::MsgDataWriter::_tao_release (MsgDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
HelloWorldData::MsgDataWriter::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:DDS/Entity:1.0") == 0 ||
      std::strcmp (value, "IDL:DDS/DataWriter:1.0") == 0 ||
      std::strcmp (value, "IDL:HelloWorldData/MsgDataWriter:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* HelloWorldData::MsgDataWriter::_interface_repository_id () const
{
  return "IDL:HelloWorldData/MsgDataWriter:1.0";
}

::CORBA::Boolean
HelloWorldData::MsgDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for HelloWorldData::MsgDataReader.

HelloWorldData::MsgDataReader_ptr
TAO::Objref_Traits<HelloWorldData::MsgDataReader>::duplicate (HelloWorldData::MsgDataReader_ptr p)
{
  return HelloWorldData::MsgDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<HelloWorldData::MsgDataReader>::release (HelloWorldData::MsgDataReader_ptr p)
{
  ::CORBA::release (p);
}

HelloWorldData::MsgDataReader_ptr
TAO::Objref_Traits<HelloWorldData::MsgDataReader>::nil ()
{
  return HelloWorldData::MsgDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<HelloWorldData::MsgDataReader>::marshal (const HelloWorldData::MsgDataReader_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



HelloWorldData::MsgDataReader::MsgDataReader ()
{}HelloWorldData::MsgDataReader_ptr
HelloWorldData::MsgDataReader::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MsgDataReader::_duplicate (
      dynamic_cast<MsgDataReader_ptr> (_tao_objref));
}

HelloWorldData::MsgDataReader_ptr
HelloWorldData::MsgDataReader::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return MsgDataReader::_duplicate (
      dynamic_cast<MsgDataReader_ptr> (_tao_objref));
}

HelloWorldData::MsgDataReader_ptr
HelloWorldData::MsgDataReader::_nil ()
{
  return nullptr;
}

HelloWorldData::MsgDataReader_ptr
HelloWorldData::MsgDataReader::_duplicate (MsgDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
HelloWorldData::MsgDataReader::_tao_release (MsgDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
HelloWorldData::MsgDataReader::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:DDS/Entity:1.0") == 0 ||
      std::strcmp (value, "IDL:DDS/DataReader:1.0") == 0 ||
      std::strcmp (value, "IDL:OpenDDS/DCPS/DataReaderEx:1.0") == 0 ||
      std::strcmp (value, "IDL:HelloWorldData/MsgDataReader:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/LocalObject:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* HelloWorldData::MsgDataReader::_interface_repository_id () const
{
  return "IDL:HelloWorldData/MsgDataReader:1.0";
}

::CORBA::Boolean
HelloWorldData::MsgDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}


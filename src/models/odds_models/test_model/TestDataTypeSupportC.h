// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v3.1.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp:148

#ifndef _TAO_IDL_TESTDATATYPESUPPORTC_VBI8KZ_H_
#define _TAO_IDL_TESTDATATYPESUPPORTC_VBI8KZ_H_


#include /**/ <ace/config-all.h>

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include <tao/ORB.h>
#include <tao/SystemException.h>
#include <tao/Basic_Types_IDLv4.h>
TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  using namespace IDLv4;
}

TAO_END_VERSIONED_NAMESPACE_DECL

#include <tao/ORB_Constants.h>
#include <dds/DCPS/ZeroCopyInfoSeq_T.h>
#include <dds/DCPS/ZeroCopySeq_T.h>
#include <tao/Object.h>
#include <tao/String_Manager_T.h>
#include <tao/Sequence_T.h>
#include <tao/Objref_VarOut_T.h>
#include <tao/Seq_Var_T.h>
#include <tao/Seq_Out_T.h>
#include <tao/Arg_Traits_T.h>
#include <tao/Basic_Arguments.h>
#include <tao/Special_Basic_Arguments.h>
#include <tao/Any_Insert_Policy_T.h>
#include <tao/Fixed_Size_Argument_T.h>
#include <tao/Var_Size_Argument_T.h>
#include <tao/UB_String_Arguments.h>
#include /**/ <tao/Version.h>
#include /**/ <tao/Versioned_Namespace.h>

#include "TestDataC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"

#if TAO_MAJOR_VERSION != 3 || TAO_MINOR_VERSION != 1 || TAO_MICRO_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace TestData
{

  
  // TAO_IDL - Generated from
  // /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< TestData::Message, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> MessageSeq;
  
  // TAO_IDL - Generated from
  // /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_interface.cpp:742

  

#if !defined (_TESTDATA_MESSAGETYPESUPPORT__VAR_OUT_CH_)
#define _TESTDATA_MESSAGETYPESUPPORT__VAR_OUT_CH_

  class MessageTypeSupport;
  using MessageTypeSupport_ptr = MessageTypeSupport*;
  using MessageTypeSupport_var = TAO_Objref_Var_T<MessageTypeSupport>;
  using MessageTypeSupport_out = TAO_Objref_Out_T<MessageTypeSupport>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

  

  class  MessageTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_type.cpp:296

    using _ptr_type = MessageTypeSupport_ptr;
    using _var_type = MessageTypeSupport_var;
    using _out_type = MessageTypeSupport_out;

    // The static operations.
    static MessageTypeSupport_ptr _duplicate (MessageTypeSupport_ptr obj);

    static void _tao_release (MessageTypeSupport_ptr obj);

    static MessageTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static MessageTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static MessageTypeSupport_ptr _nil ();

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::TestData::Message & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::TestData::Message & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::TestData::Message_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::TestData::Message_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    MessageTypeSupport ();

    

    virtual ~MessageTypeSupport () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    MessageTypeSupport (const MessageTypeSupport &) = delete;
    MessageTypeSupport (MessageTypeSupport &&) = delete;
    MessageTypeSupport &operator= (const MessageTypeSupport &) = delete;
    MessageTypeSupport &operator= (MessageTypeSupport &&) = delete;
  };
  // TAO_IDL - Generated from
  // /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_interface.cpp:742

  

#if !defined (_TESTDATA_MESSAGEDATAWRITER__VAR_OUT_CH_)
#define _TESTDATA_MESSAGEDATAWRITER__VAR_OUT_CH_

  class MessageDataWriter;
  using MessageDataWriter_ptr = MessageDataWriter*;
  using MessageDataWriter_var = TAO_Objref_Var_T<MessageDataWriter>;
  using MessageDataWriter_out = TAO_Objref_Out_T<MessageDataWriter>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

  

  class  MessageDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_type.cpp:296

    using _ptr_type = MessageDataWriter_ptr;
    using _var_type = MessageDataWriter_var;
    using _out_type = MessageDataWriter_out;

    // The static operations.
    static MessageDataWriter_ptr _duplicate (MessageDataWriter_ptr obj);

    static void _tao_release (MessageDataWriter_ptr obj);

    static MessageDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static MessageDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static MessageDataWriter_ptr _nil ();

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::TestData::Message & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::TestData::Message & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::TestData::Message & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::TestData::Message & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::TestData::Message & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::TestData::Message & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::TestData::Message & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::TestData::Message & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::TestData::Message & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::TestData::Message & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    MessageDataWriter ();

    

    virtual ~MessageDataWriter () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    MessageDataWriter (const MessageDataWriter &) = delete;
    MessageDataWriter (MessageDataWriter &&) = delete;
    MessageDataWriter &operator= (const MessageDataWriter &) = delete;
    MessageDataWriter &operator= (MessageDataWriter &&) = delete;
  };
  // TAO_IDL - Generated from
  // /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_interface.cpp:742

  

#if !defined (_TESTDATA_MESSAGEDATAREADER__VAR_OUT_CH_)
#define _TESTDATA_MESSAGEDATAREADER__VAR_OUT_CH_

  class MessageDataReader;
  using MessageDataReader_ptr = MessageDataReader*;
  using MessageDataReader_var = TAO_Objref_Var_T<MessageDataReader>;
  using MessageDataReader_out = TAO_Objref_Out_T<MessageDataReader>;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:39

  

  class  MessageDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_type.cpp:296

    using _ptr_type = MessageDataReader_ptr;
    using _var_type = MessageDataReader_var;
    using _out_type = MessageDataReader_out;

    // The static operations.
    static MessageDataReader_ptr _duplicate (MessageDataReader_ptr obj);

    static void _tao_release (MessageDataReader_ptr obj);

    static MessageDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static MessageDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static MessageDataReader_ptr _nil ();

    virtual ::DDS::ReturnCode_t read (
      ::TestData::MessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::TestData::MessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::TestData::MessageSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::TestData::MessageSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::TestData::Message & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::TestData::Message & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::TestData::MessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::TestData::MessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::TestData::MessageSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::TestData::MessageSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::TestData::MessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::TestData::MessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::TestData::MessageSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::TestData::MessageSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::TestData::MessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::TestData::Message & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::TestData::Message & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id () const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    MessageDataReader ();

    

    virtual ~MessageDataReader () = default;
  
  private:
    // Private and unimplemented for concrete interfaces.
    MessageDataReader (const MessageDataReader &) = delete;
    MessageDataReader (MessageDataReader &&) = delete;
    MessageDataReader &operator= (const MessageDataReader &) = delete;
    MessageDataReader &operator= (MessageDataReader &&) = delete;
  };


// TAO_IDL - Generated from
// /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module TestData
// TAO_IDL - Generated from
// /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_TESTDATA_MESSAGETYPESUPPORT__TRAITS_)
#define _TESTDATA_MESSAGETYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::TestData::MessageTypeSupport>
  {
    static ::TestData::MessageTypeSupport_ptr duplicate (::TestData::MessageTypeSupport_ptr p);
    static void release (::TestData::MessageTypeSupport_ptr p);
    static ::TestData::MessageTypeSupport_ptr nil ();
    static ::CORBA::Boolean marshal (const ::TestData::MessageTypeSupport_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_TESTDATA_MESSAGEDATAWRITER__TRAITS_)
#define _TESTDATA_MESSAGEDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::TestData::MessageDataWriter>
  {
    static ::TestData::MessageDataWriter_ptr duplicate (::TestData::MessageDataWriter_ptr p);
    static void release (::TestData::MessageDataWriter_ptr p);
    static ::TestData::MessageDataWriter_ptr nil ();
    static ::CORBA::Boolean marshal (const ::TestData::MessageDataWriter_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_TESTDATA_MESSAGEDATAREADER__TRAITS_)
#define _TESTDATA_MESSAGEDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::TestData::MessageDataReader>
  {
    static ::TestData::MessageDataReader_ptr duplicate (::TestData::MessageDataReader_ptr p);
    static void release (::TestData::MessageDataReader_ptr p);
    static ::TestData::MessageDataReader_ptr nil ();
    static ::CORBA::Boolean marshal (const ::TestData::MessageDataReader_ptr p,TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/mhutomop/OpenDDS-3.26.1/ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp:1648

#endif /* ifndef */

